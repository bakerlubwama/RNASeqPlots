y <- as.matrix(c(0,10,20,30,40,50,60,70,80,90,100))
y
pred1 <- as.matrix(c(0,1,6,15,18,,24,26,33,37,42,49))
y <- as.matrix(c(0,10,20,30,40,50,60,70,80,90,100))
pred1 <- as.matrix(c(0,1,6,15,18,24,26,33,37,42,49))
pred2 <- as.matrix(c(1,-3,5,15,22,27,28,35,30,38,49))
pred3 <- as.matrix(c(0.00,1.58,1.82,1.97,2.09,2.18,2.26,2.33,2.40,2.45,2.51))
pred4 <- as.matrix(c(-5,48,194,443,798,1246,1799,2446,3196,4048,4995))
data = data.frame(pred1, pred2, pred3, pred4, y)
ggplot(data, aes(x=pred1, y=y)) + geom_point()
library(ggplot2)
ggplot(data, aes(x=pred1, y=y)) + geom_point()
ggplot(data, aes(x=pred1, y=y)) + geom_point() + geom_smooth(method=lm)
dev.off()
ggplot(data, aes(x=pred2, y=y)) + geom_point() + geom_smooth(method=lm)
dev.off()
ggplot(data, aes(x=pred3, y=y)) + geom_point() + geom_smooth(method=lm)
dev.off()
ggplot(data, aes(x=pred4, y=y)) + geom_point() + geom_smooth(method=lm)
dev.off()
lm.fit1 <- lm(y ~ pred1, data)
summary(lm.fit1)
lm.fit1 <- lm(y ~ pred2, data)
summary(lm.fit1)
lm.fit2 <- lm(y ~ pred2, data)
summary(lm.fit2)
lm.fit3 <- lm(y ~ pred3, data)
summary(lm.fit3)
lm.fit4 <- lm(y ~ pred4, data)
summary(lm.fit4)
lm.fit2 <- lm(y ~ pred2, data)
summary(lm.fit2)
lm.fit3 <- lm(y ~ pred3, data)
summary(lm.fit3)
lm.fit4 <- lm(y ~ pred4, data)
summary(lm.fit4)
lm.fit4 <- lm(y ~ pred4, data)
summary(lm.fit4)
lm.fit2 <- lm(y ~ pred2, data)
summary(lm.fit2)
pred5 <- as.matrix(c(0,0,0,1,1,0,1,1,0,1,1))
pred6 <- as.matrix(c(2,0,0,0,2,1,3,1,3,1,1))
data = data.frame(pred1, pred2, pred3, pred4, pred5, pred6, y)
lm.fit5 <- lm(y ~ pred5, data)
summary(lm.fit5)
lm.fit6 <- lm(y ~ pred6, data)
summary(lm.fit6)
y$pred5 <- as.factor(y$pred5)
y$pred5 <- as.factor(pred5)
View(y)
data$pred5 <- as.factor(data$pred5)
y <- as.matrix(c(0,10,20,30,40,50,60,70,80,90,100))
data$pred6 <- as.factor(data$pred6)
lm.fit5factor <- lm(y ~ pred5, data)
summary(lm.fit5factor)
lm.fit6factor <- lm(y ~ pred6, data)
summary(lm.fit6factor)
setwd("~/Documents/R/Dissertation")
#Unnormalised
unnorm <- read.csv("data/raw/counts_raw.csv", header=TRUE)
head(unnorm)
unorm <- unnorm[,1:2]
colnames(unnorm)[1] <- "genes"
head(unorm)
library(GGally)
# Simulating Data Set - Data Engineering ----------------------------------
counts <- read.csv("data/raw/counts_raw.csv", header=TRUE, row.names=1)
gene_ids <- rownames(counts)
head(gene_ids)
gene_ids <- as.data.frame(gene_ids, header=TRUE)
head(gene_ids)
simulated_data <- gene_ids
head(simulated_data)
#load & merge normalised data
#rpm
rpm <- read.csv("data/processed/rpm_normalised.csv",header=TRUE)
rpm <- rpm[,1:2]
head(rpm)
add_to_sim <- function(sim_data, add, colname)
{
sim_data <- merge(sim_data, add, by.x="gene_ids", by.y="genes")
head(sim_data)
colnames(sim_data)[ncol(sim_data)] <- (colname)
return(sim_data)
}
simulated_data <- add_to_sim(sim_data=simulated_data, add=rpm, colname="rpm")
head(simulated_data)
#rpkm
rpkm <- read.csv("data/processed/rpkm_normalised.csv",header=TRUE)
head(rpkm)
rpkm <- rpkm[,1:2]
head(rpkm)
simulated_data <- add_to_sim(sim_data=simulated_data, add=rpkm, colname="rpkm")
head(simulated_data)
#edgeR(tmm)
tmm <- read.csv("data/processed/tmm_normalised.csv", header=TRUE)
head(tmm)
tmm <- tmm[,1:2]
colnames(tmm)[1] <- "genes"
head(tmm)
simulated_data <- add_to_sim(sim_data = simulated_data, add=tmm, colname = "tmm")
head(simulated_data)
#DESeq
deseq <- read.csv("data/processed/deseq_normalised.csv", header=TRUE)
head(deseq)
deseq <- deseq[,1:2]
colnames(deseq)[1] <- "genes"
head(deseq)
simulated_data <- add_to_sim(sim_data = simulated_data, add=deseq, colname = "deseq")
head(simulated_data)
#Upper Quartile
uq <- read.csv("data/processed/upper_quartile_normalised.csv", header=TRUE)
head(uq)
uq <- uq[,1:2]
colnames(uq)[1] <- "genes"
head(uq)
simulated_data <- add_to_sim(sim_data = simulated_data, add=uq, colname = "uq")
head(simulated_data)
#Quantile
quantile <- read.csv("data/processed/quantile_normalised_counts.csv", header=TRUE)
head(quantile)
quantile <- quantile[,1:2]
colnames(quantile)[1] <- "genes"
head(quantile)
simulated_data <- add_to_sim(sim_data = simulated_data, add=quantile, colname = "quantile")
head(simulated_data)
#Unnormalised
unnorm <- read.csv("data/raw/counts_raw.csv", header=TRUE)
head(unnorm)
unorm <- unnorm[,1:2]
colnames(unnorm)[1] <- "genes"
head(unorm)
simulated_data <- add_to_sim(sim_data = simulated_data, add=unorm, colname = "Unnormalised")
head(simulated_data)
write.csv(simulated_data, "data/processed/simulated_data.csv")
#ggpairs
simulated_data <- read.csv("data/processed/simulated_data.csv", header=TRUE, row.names=1)
simulated_data <- simulated_data[,-1]
head(simulated_data)
pdf('plots/ggpairs_simulated_data.pdf')
ggpairs(simulated_data)
dev.off()
dev.off()
#ggpairs
simulated_data <- read.csv("data/processed/simulated_data.csv", header=TRUE, row.names=1)
simulated_data <- simulated_data[,-1]
head(simulated_data)
dev.off()
pdf('plots/ggpairs_simulated_data.pdf')
ggpairs(simulated_data)
dev.off()
